<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.2.xsd 
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">


	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<context:component-scan base-package="cn.scholarprofile.controller" />
	<!-- springmvc传json值时的乱码解决 -->
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>

	</mvc:annotation-driven>

	<!-- <mvc:annotation-driven /> -->	<!-- 对静态资源的处理 -->
	<!-- <mvc:resources location="/views/images/" mapping="/images/**" /> /images/**的请求都会到/views/images/下去找，下面的类似 -->
	<!-- <mvc:resources location="/views/css/" mapping="/css/**" /> <mvc:resources 
		location="/views/js/" mapping="/js/**" /> <mvc:resources location="/views/images/" 
		mapping="/images/**" /> <mvc:resources location="/views/fonts/" mapping="/fonts/**" 
		/> <mvc:resources location="/views/fonts-awesome/" mapping="/fonts-awesome/**" 
		/> -->
	<!-- <mvc:resources location="/views/" mapping="/views/**" /> <mvc:resources 
		location="/" mapping="/**" /> <mvc:resources location="/views/" mapping="*.htm" 
		/> -->

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/" p:suffix=".jsp" />

	<!--配置登录的拦截器 -->
	<!--<bean id="handlerMapping" class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"> 
		<property name="interceptors"> <list> <ref bean="loginInterceptor" /> </list> 
		</property> </bean> <bean id="loginInterceptor" class="cn.scholarprofile.util.LoginInterceptor"> 
		</bean> <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" 
		/> -->

	<!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="UTF-8" />
		<!-- 指定所上传文件的总大小不能超过100MB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
		<property name="maxUploadSize" value="-1" />
	</bean>
	<!-- 该异常是SpringMVC在检查上传的文件信息时抛出来的，而且此时还没有进入到Controller方法中 -->
	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到XXX页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">/index.jsp</prop>
			</props>
		</property>
	</bean>

</beans>